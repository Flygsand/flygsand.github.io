{"version":3,"file":"component---src-templates-blog-js-13c8dc2b445c205c7201.js","mappings":"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","sources":["webpack://site/./src/components/Pagination.js","webpack://site/./src/components/Tag/TagGroup.js","webpack://site/./src/components/Tag/Tag.js","webpack://site/./src/components/Tag/index.js","webpack://site/./src/templates/blog.js","webpack://site/./src/util.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { Menu, Button } from 'semantic-ui-react';\n\nconst Pagination = ({ activePage, totalPages, urlForPage, maxVisibleRange }) => {\n\tconst basePage = Math.floor((activePage - 1) / maxVisibleRange) * maxVisibleRange + 1;\n\tconst prevPage = Math.max(1, activePage - 1);\n\tconst nextPage = Math.min(totalPages, activePage + 1);\n\n\treturn (\n\t\t<>\n\t\t\t<Menu pagination size='large' className='mobile hidden'>\n\t\t\t\t<Menu.Item as={Link} to={urlForPage(1)} icon='angle double left' disabled={activePage === 1} />\n\t\t\t\t<Menu.Item as={Link} to={urlForPage(prevPage)} icon='angle left' disabled={activePage === 1} />\n\t\t\t\t{basePage > maxVisibleRange &&\n\t\t\t\t<Menu.Item as={Link} to={urlForPage(activePage - maxVisibleRange)} icon='ellipsis horizontal' title='' />\n\t\t\t\t}\n\t\t\t\t{Array.apply(0, Array(Math.min(maxVisibleRange, Math.max(totalPages - basePage + 1, 1)))).map((_, i) => (\n\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\tto={urlForPage(basePage + i)}\n\t\t\t\t\t\tactiveClassName='active'>\n\t\t\t\t\t\t{basePage + i}\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t))}\n\t\t\t\t{totalPages - basePage > maxVisibleRange &&\n\t\t\t\t<Menu.Item as={Link} to={urlForPage(Math.min(activePage + maxVisibleRange, totalPages))} icon='ellipsis horizontal' />\n\t\t\t\t}\n\t\t\t\t<Menu.Item as={Link} to={urlForPage(nextPage)} icon='angle right' disabled={activePage === totalPages} />\n\t\t\t\t<Menu.Item as={Link} to={urlForPage(totalPages)} icon='angle double right' disabled={activePage === totalPages} />\n\t\t\t</Menu>\n\t\t\t<Button.Group className='mobile only' fluid>\n\t\t\t\t{activePage > 1 && <Button as={Link} to={urlForPage(prevPage)} content='Previous' floated='left' />}\n\t\t\t\t{activePage < totalPages && <Button as={Link} to={urlForPage(nextPage)} content='Next' floated='right' />}\n\t\t\t</Button.Group>\n\t\t</>\n\t);\n};\n\nPagination.propTypes = {\n\tactivePage: PropTypes.number,\n\ttotalPages: PropTypes.number.isRequired,\n\turlForPage: PropTypes.func.isRequired,\n\tmaxVisibleRange: PropTypes.number,\n};\n\nPagination.defaultProps = {\n\tactivePage: 1,\n\tmaxVisibleRange: 10,\n};\n\nexport default Pagination;\n","import PropTypes from 'prop-types';\nimport { Label } from 'semantic-ui-react';\n\nconst TagGroup = ({ children, ...props }) => (\n\t<Label.Group {...props}>\n\t\t{children}\n\t</Label.Group>\n);\n\nTagGroup.propTypes = {\n\tchildren: PropTypes.node.isRequired\n};\n\nexport default TagGroup;\n","import PropTypes from 'prop-types';\nimport { Label } from 'semantic-ui-react';\n\nimport TagGroup from './TagGroup';\nimport { hashCode } from '../../util';\n\nconst colors = [\n\t'red',\n\t'orange',\n\t'yellow',\n\t'olive',\n\t'green',\n\t'teal',\n\t'blue',\n\t'violet',\n\t'purple',\n\t'pink',\n\t'brown',\n\t'grey',\n\t'black',\n];\n\nconst Tag = ({ name, ...props }) => {\n\tconst nameHash = (hashCode(name) + 2147483647) + 1;\n\treturn (\n\t\t<Label basic color={colors[nameHash % colors.length]}>#{name}</Label>\n\t);\n};\n\nTag.propTypes = {\n\tname: PropTypes.string.isRequired,\n};\n\nTag.Group = TagGroup;\n\nexport default Tag;\n","import Tag from './Tag';\nexport default Tag;\n","import { graphql, Link } from 'gatsby';\nimport { Card, Button } from 'semantic-ui-react';\n\nimport Layout from '../components/Layout';\nimport Pagination from '../components/Pagination';\nimport Head from '../components/Head';\nimport Tag from '../components/Tag';\n\nconst BlogTemplate = ({ data, pageContext }) => {\n\tconst posts = data.allMarkdownRemark.edges;\n\tconst { pageNumber, totalPages } = pageContext;\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Head title='Blog' />\n\t\t\t{posts.length > 0 ?\n\t\t\t\tposts.map(({ node }) => {\n\t\t\t\t\tconst { title, tags } = node.frontmatter;\n\t\t\t\t\tconst url = `/post/${node.fields.slug}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card raised fluid key={node.fields.slug}>\n\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t<Card.Header as={Link} to={url}>\n\t\t\t\t\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t<Card.Description>\n\t\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n\t\t\t\t\t\t\t\t</Card.Description>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t<Card.Content extra>\n\t\t\t\t\t\t\t\t{tags.length > 0 &&\n\t\t\t\t\t\t\t\t<Tag.Group style={{ float: 'left' }}>\n\t\t\t\t\t\t\t\t\t{tags.map((t, i) => (\n\t\t\t\t\t\t\t\t\t\t<Tag key={i} name={t}/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Tag.Group>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Button as={Link} color='blue' to={url} floated='right' size='tiny'>Read</Button>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t) : (\n\t\t\t\t\t<p>There are no posts to show.</p>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\t{totalPages > 1 &&\n\t\t\t<Pagination\n\t\t\t\tactivePage={pageNumber}\n\t\t\t\ttotalPages={totalPages}\n\t\t\t\turlForPage={p => p === 1 ? '/' : `/blog/${p}`}\n\t\t\t/>\n\t\t\t}\n\t\t</Layout>\n\t);\n};\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n\tquery($skip: Int!, $limit: Int!) {\n\t\tallMarkdownRemark(\n\t\t\tfilter: { fields: { collection: { eq: \"posts\" } } }\n\t\t\tsort: { frontmatter: { date: DESC } }\n\t\t\tlimit: $limit\n\t\t\tskip: $skip\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\texcerpt(pruneLength: 300, format: HTML)\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\ttags\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","export function hashCode (str) {\n\tlet hash = 0;\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\thash = ((hash << 5) - hash + str.charCodeAt(i)) << 0;\n\t}\n\n\treturn hash;\n}\n\nexport function capitalizeFirstLetter (str) {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n"],"names":["Pagination","_ref","activePage","totalPages","urlForPage","maxVisibleRange","basePage","Math","floor","prevPage","max","nextPage","min","_jsxs","_Fragment","children","Menu","pagination","size","className","_jsx","Item","as","Link","to","icon","disabled","title","Array","apply","map","_","i","activeClassName","Button","Group","fluid","content","floated","defaultProps","props","Label","colors","Tag","name","nameHash","hashCode","basic","color","length","TagGroup","data","pageContext","posts","allMarkdownRemark","edges","pageNumber","Layout","Head","_ref2","node","tags","frontmatter","url","fields","slug","Card","raised","Content","Header","Description","dangerouslySetInnerHTML","__html","excerpt","extra","style","float","t","p","str","hash","charCodeAt","capitalizeFirstLetter","charAt","toUpperCase","slice"],"sourceRoot":""}