{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js"],"names":["pageContext","data","post","markdownRemark","site","siteMetadata","repo","social","slug","hasExample","title","frontmatter","raised","as","Subheader","date","dangerouslySetInnerHTML","__html","html","href","twitter","pageQuery","Divider","props","children","className","clearing","content","fitted","hidden","horizontal","inverted","section","vertical","classes","rest","ElementType","createElement","isNil","handledProps","propTypes"],"mappings":"6FAAA,sIAOe,sBAA4B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACxBC,EAAOD,EAAKE,eADuB,EAEhBF,EAAKG,KAAKC,aAA3BC,EAFiC,EAEjCA,KAAMC,EAF2B,EAE3BA,OACNC,EAAqBR,EAArBQ,KAAMC,EAAeT,EAAfS,WAEd,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,MAAOR,EAAKS,YAAYD,QAC7B,kBAAC,IAAD,CAASE,QAAM,GACd,kBAAC,IAAD,CAAQC,GAAG,MACTX,EAAKS,YAAYD,MAClB,kBAAC,IAAOI,UAAR,qBACeZ,EAAKS,YAAYI,OAGjC,yBAAKC,wBAAyB,CAAEC,OAAQf,EAAKgB,QAC7C,kBAAC,IAAD,MACA,2BACC,mFAEoB,uBAAGC,KAAI,uBAAyBZ,EAAOa,SAAvC,IAAoDb,EAAOa,SAF/E,6BAKD,2BACC,wCACWX,GAAc,gEADzB,wBAC4E,uBAAGU,KAAK,qDAAR,sFAD5E,IAGEV,GACA,gDAAW,uBAAGU,KAAI,sBAAwBb,EAAxB,yBAAqDE,GAA5D,qBAAX,6BASA,IAAMa,EAAS,c,kCC5CtB,+HASA,SAASC,EAAQC,GACf,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAWH,EAAMG,SACjBC,EAAUJ,EAAMI,QAChBC,EAASL,EAAMK,OACfC,EAASN,EAAMM,OACfC,EAAaP,EAAMO,WACnBC,EAAWR,EAAMQ,SACjBC,EAAUT,EAAMS,QAChBC,EAAWV,EAAMU,SACjBC,EAAU,IAAG,KAAM,YAAWR,EAAU,YAAa,YAAWE,EAAQ,UAAW,YAAWC,EAAQ,UAAW,YAAWC,EAAY,cAAe,YAAWC,EAAU,YAAa,YAAWC,EAAS,WAAY,YAAWC,EAAU,YAAa,UAAWR,GACtQU,EAAO,YAAkBb,EAASC,GAClCa,EAAc,YAAed,EAASC,GAC1C,OAAO,IAAMc,cAAcD,EAAa,IAAS,GAAID,EAAM,CACzDV,UAAWS,IACT,IAAcI,MAAMd,GAAYG,EAAUH,GAGhDF,EAAQiB,aAAe,CAAC,KAAM,WAAY,YAAa,WAAY,UAAW,SAAU,SAAU,aAAc,WAAY,UAAW,YACvIjB,EAAQkB,UAiCJ,GACW","file":"component---src-templates-post-js-d09eb9398a5edc206e71.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Segment, Header, Divider } from 'semantic-ui-react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nexport default ({ pageContext, data }) => {\n\tconst post = data.markdownRemark;\n\tconst { repo, social } = data.site.siteMetadata;\n\tconst { slug, hasExample } = pageContext;\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={post.frontmatter.title} />\n\t\t\t<Segment raised>\n\t\t\t\t<Header as='h1'>\n\t\t\t\t\t{post.frontmatter.title}\n\t\t\t\t\t<Header.Subheader>\n\t\t\t\t\t\tPublished on {post.frontmatter.date}\n\t\t\t\t\t</Header.Subheader>\n\t\t\t\t</Header>\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: post.html }}></div>\n\t\t\t\t<Divider />\n\t\t\t\t<p>\n\t\t\t\t\t<em>\n\t\t\t\t\t\tEnjoyed this post? Got feedback?\n\t\t\t\t\t\tConsider following <a href={`https://twitter.com/${social.twitter}`}>@{social.twitter}</a> for the latest updates.\n\t\t\t\t\t</em>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<em>\n\t\t\t\t\t\tThis post{hasExample && <>, excluding sample code,</>} is licensed under a <a href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">\n\t\t\t\t\t\tCreative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License</a>.\n\t\t\t\t\t\t{hasExample &&\n\t\t\t\t\t\t\t<> See the <a href={`https://github.com/${repo}/tree/master/examples/${slug}`}>example directory</a> for code licensing.</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</em>\n\t\t\t\t</p>\n\t\t\t</Segment>\n\t\t</Layout>\n\t);\n};\n\nexport const pageQuery = graphql`\n\tquery($slug: String!) {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\trepo\n\t\t\t\tsocial {\n\t\t\t\t\ttwitter\n\t\t\t\t\tgithub\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\tdate(formatString: \"MMMM Do YYYY\")\n\t\t\t}\n\t\t}\n\t}\n`;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;"],"sourceRoot":""}