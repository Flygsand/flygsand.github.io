{"version":3,"file":"component---src-templates-post-js-be13f37a0db5887e936f.js","mappings":"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","sources":["webpack://site/./src/templates/post.js","webpack://site/./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js","webpack://site/./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","webpack://site/./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","webpack://site/./node_modules/semantic-ui-react/dist/es/elements/Header/Header.js"],"sourcesContent":["import { graphql } from 'gatsby';\nimport { Segment, Header, Divider } from 'semantic-ui-react';\n\nimport Layout from '../components/Layout';\nimport Head from '../components/Head';\n\nconst PostTemplate = ({ pageContext, data }) => {\n\tconst post = data.markdownRemark;\n\tconst { social } = data.site.siteMetadata;\n\tconst { slug, hasExample } = pageContext;\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Head title={post.frontmatter.title} />\n\t\t\t<Segment raised>\n\t\t\t\t<Header as='h1'>\n\t\t\t\t\t{post.frontmatter.title}\n\t\t\t\t\t<Header.Subheader>\n\t\t\t\t\t\tPublished on {post.frontmatter.date}\n\t\t\t\t\t</Header.Subheader>\n\t\t\t\t</Header>\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: post.html }}></div>\n\t\t\t\t<Divider />\n\t\t\t\t<p>\n\t\t\t\t\t<em>\n\t\t\t\t\t\tEnjoyed this post? Got feedback?\n\t\t\t\t\t\tConsider following <a href={`https://twitter.com/${social.twitter}`}>@{social.twitter}</a> for the latest updates.\n\t\t\t\t\t</em>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<em>\n\t\t\t\t\t\tThis post{hasExample && <>, excluding sample code,</>} is licensed under a <a href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">\n\t\t\t\t\t\tCreative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License</a>.\n\t\t\t\t\t\t{hasExample &&\n\t\t\t\t\t\t\t<> See the <a href={`https://replit.com/@${social.replit}/${slug}`}>example directory</a> for code licensing.</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</em>\n\t\t\t\t</p>\n\t\t\t</Segment>\n\t\t</Layout>\n\t);\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n\tquery($slug: String!) {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\tsocial {\n\t\t\t\t\ttwitter\n\t\t\t\t\treplit\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\tdate(formatString: \"MMMM Do YYYY\")\n\t\t\t}\n\t\t}\n\t}\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../Icon';\nimport Image from '../Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && /*#__PURE__*/React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;"],"names":["_ref","pageContext","data","post","markdownRemark","social","site","siteMetadata","slug","hasExample","_jsxs","Layout","children","_jsx","Head","title","frontmatter","Segment","raised","Header","as","Subheader","date","dangerouslySetInnerHTML","__html","html","Divider","href","twitter","_Fragment","replit","props","className","clearing","content","fitted","hidden","horizontal","inverted","section","vertical","classes","rest","ElementType","handledProps","propTypes","HeaderSubheader","getUnhandledProps","getElementType","childrenUtils","create","HeaderContent","attached","block","color","disabled","dividing","floated","icon","image","size","sub","subheader","textAlign","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content"],"sourceRoot":""}